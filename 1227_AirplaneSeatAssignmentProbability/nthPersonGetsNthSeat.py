# 解法一：脑筋急转弯
"""
后面每一个人来了之后如果自己的座位上有人就把他赶走
所以2~n-1号就会对位入座。
1号就在1和n号之间以50的概率坐下;

因为：
随便坐 和 驱赶后随便坐 概率一样
即， 只要座位被人坐着，谁坐都一样
"""
class Solution:
    def nthPersonGetsNthSeat(self, n: int) -> float:
        return 1 if n == 1 else .5
        
        
# 解法二：dp
"""
第n个人能够做到位置上，有两种情况:
1. 第一个人做到第一个位置，后面人也不会乱；
2. 第i个人坐在除去i和n的座位，这种就是 n - 1 的情况

所以， 状态转移公式：
dp[i] = 1 / i + (i - 2) / i * dp[i - 1]
"""
